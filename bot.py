import os
import telebot
from utils import get_daily_horoscope

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.environ.get('BOT_TOKEN')
if not BOT_TOKEN:
    raise ValueError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

bot = telebot.TeleBot(BOT_TOKEN)

# –ö–æ–º–∞–Ω–¥–∞ /start –∏–ª–∏ /hello
@bot.message_handler(commands=['start', 'hello'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–≥–æ—Ä–æ—Å–∫–æ–ø üåü\n–ù–∞–ø–∏—à–∏ /horoscope, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑.")

# –ö–æ–º–∞–Ω–¥–∞ /horoscope ‚Äî –∑–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∞—Ä–∏—è
@bot.message_handler(commands=['horoscope'])
def sign_handler(message):
    text = ("ü™ê –ö–∞–∫–æ–π —É —Ç–µ–±—è –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞?\n"
            "–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑:\n*Aries*, *Taurus*, *Gemini*, *Cancer*, *Leo*, *Virgo*,\n"
            "*Libra*, *Scorpio*, *Sagittarius*, *Capricorn*, *Aquarius*, *Pisces*.")
    sent_msg = bot.send_message(message.chat.id, text, parse_mode="Markdown")
    bot.register_next_step_handler(sent_msg, day_handler)

# –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∑–Ω–∞–∫–∞ ‚Äî –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞—Ç—É
def day_handler(message):
    sign = message.text.strip().capitalize()
    text = ("üìÖ –ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø?\n"
            "–í—ã–±–µ—Ä–∏: *today*, *tomorrow*, *yesterday*, –∏–ª–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ *YYYY-MM-DD*.")
    sent_msg = bot.send_message(message.chat.id, text, parse_mode="Markdown")
    bot.register_next_step_handler(sent_msg, fetch_horoscope, sign)

# –ü–æ–ª—É—á–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø
def fetch_horoscope(message, sign):
    day = message.text.strip().lower()
    try:
        horoscope = get_daily_horoscope(sign, day)
        data = horoscope["data"]
        response = (
            f"*üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign}*\n"
            f"{data['horoscope_data']}\n\n"
            f"*üìÜ –î–µ–Ω—å:* {data['date']}"
        )
        bot.send_message(message.chat.id, response, parse_mode="Markdown")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}\n–ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.", parse_mode="Markdown")

# –≠—Ö–æ –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(func=lambda msg: True)
def echo_all(message):
    bot.reply_to(message, message.text)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.infinity_polling()
